type: output
files:
  - name: main.py
    visible: true
    placeholders:
      - offset: 465
        length: 30
        placeholder_text: "...  # TODO Реализуйте функцию"
        initial_state:
          length: 30
          offset: 465
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          lower_text = text.lower()
          
              letter_count = {}
              for char in lower_text:
                  if char.isalpha():
                      if char in letter_count:
                          letter_count[char] += 1
                      else:
                          letter_count[char] = 1
              return letter_count
        selected: false
        status: Solved
      - offset: 1095
        length: 30
        placeholder_text: "...  # TODO Реализуйте функцию"
        initial_state:
          length: 30
          offset: 1095
        initialized_from_dependency: false
        encrypted_possible_answer: "total_letters = sum(letter_count.values())\n    \n\
      \    letter_frequency = {}\n    for current_letter, count in letter_count.items():\n\
      \        letter_frequency[current_letter] = count / total_letters\n        \n\
      \    return letter_frequency"
        selected: false
        status: Solved
      - offset: 2171
        length: 57
        placeholder_text: "# TODO Распечатайте в столбик букву и её частоту в тексте"
        initial_state:
          length: 57
          offset: 2127
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          for letter, frequency in frequency_dict.items():
              print(f"{letter}: {frequency:.2f}")
        selected: true
        status: Solved
    learner_created: false
  - name: __init__.py
    visible: false
    learner_created: false
  - name: tests/output.txt
    visible: false
    learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: "Fri, 25 Oct 2024 15:51:58 UTC"
record: -1
solution_hidden: true
